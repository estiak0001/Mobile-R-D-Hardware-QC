@model WebAppEs.ViewModel.FaultsEntry.MobileRNDFaultsEntryViewModel
@inject IJsonHelper Json;

@{ ViewData["Title"] = "Create"; }

<style>
    .select2-results {
        color: black;
    }

    #select2-ddlModel-container, #select2-ddlCategory-container, #select2-ddlSubCategory-container {
        color: black;
    }

    .form-control {
        border-radius: 0;
        box-shadow: none;
        border-color: #d2d6de
    }

    .select2-hidden-accessible {
        border: 0 !important;
        clip: rect(0 0 0 0) !important;
        height: 1px !important;
        margin: -1px !important;
        overflow: hidden !important;
        padding: 0 !important;
        position: absolute !important;
        width: 1px !important
    }

    .form-control {
        display: block;
        width: 100%;
        height: 38px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s
    }

    .select2-container--default.select2-container--focus .select2-selection--multiple, .select2-container--default.select2-container--focus .select2-selection--single {
        border-color: #80bdff;
        height: 20px !important;
        width: 100% !important;
    }

    .select2-container--default .select2-selection--single {
        background-color: #fff;
        border: 1px solid #ced4da;
        border-radius: 4px;
        height: 20px !important;
        width: 100% !important;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            @Html.Raw(@ViewBag.Alert)
        </div>
    </div>
</div>
<div class="x_panel shadow p-3 mb-5 bg-white rounded">
    <div class="container">
        <div style="border-bottom: 2px solid #E6E9ED; margin-bottom: 0px; padding: 0px 0px 0px!important; " class="x_title">
            <h2 style="color:black">Daily Maximum Fault Analysis</h2>
            <div class="clearfix"></div>
        </div>
        <div style="margin-top:0px" class="x_content">
            <br />
            <form class="form-label-left input_mask">
                <div class="row">
                    <div style="padding: 10px; border-radius: 8px; background-color: #fff;" class="col-md-12">
                        <input asp-for="Id" id="txtHiddenID" type="hidden">
                        <div class="row">
                            <div class="col-md-2 col-sm-2  form-group has-feedback">
                                <label>Date</label>

                                @*<input asp-for="Date" class="form-control form-control-sm">
                                <span asp-validation-for="Date" class="text-danger"></span>*@
                                @if (Model.ButtonText == "Update")
                                {
                                    <input id="txtDate" disabled asp-for="Date" class="form-control" /> }
                                else
                                {
                                    <input id="txtDate" asp-for="Date" class="form-control" />}
                                <span class="error">Please select date!</span>
                            </div>
                            <div class="col-md-2 col-sm-2  form-group has-feedback">
                                <label>Model</label>
                                <select asp-for="PartsModelID" id="ddlModel" class="form-control">
                                    <option value="@Model.PartsModelID">--Select Model--</option>
                                    @foreach (var item in Model.PartsModelViewModel)
                                    {
                                        <option value="@item.ID">@item.Name</option>
                                    }
                                </select>
                                <span id="ddlmodelError" class="error">Please select model!</span>
                            </div>
                            <div class="col-md-3">
                                <label for="ddlCategory">Category* :</label>
                                <select required id="ddlCategory" class="form-control">
                                    <option value="">--Select Category--</option>
                                    @foreach (var item in Model.MRNDQC_CategoryVM)
                                    {
                                        <option value="@item.Id">@item.CategoryName</option>
                                    }
                                </select>
                                <span class="error">Please select Category!</span>
                            </div>
                            <div class="col-md-2">
                                <label for="ddlFaultType">Fault Type* :</label>
                                <select id="ddlFaultType" class="form-control">
                                    <option value="">--Select Fault Type--</option>
                                    <option value="F">Functional</option>
                                    <option value="A">Aesthetic</option>
                                </select>
                                <span class="error">Please select Fault Type!</span>
                            </div>
                            <div class="col-md-3">
                                <label for="ddlSubCategory">Sub Category* :</label>
                                <select id="ddlSubCategory" class="form-control">
                                    <option value="">--Select Sub Category--</option>
                                </select>
                                <span class="error">Please select Sub Category</span>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="wrapper shadow-lg bg-white rounded" style="padding: 0px; border-radius: 6px; " id="LoadedSortData">

            </div>
        </div>
    </div>
</div>


<div class="x_panel shadow p-3 mb-5 bg-white rounded">
    <div class="container">
        <!-- start form for validation -->
        <form id="demo-form">
            <div style="">
                <div class="row">
                    <div class="col-md-2">
                        <label for="ddlFaultType">Analysis Type* :</label>
                        <select id="ddlFaultType" class="form-control">
                            <option value="">--Select Analysis Type--</option>
                            <option value="In Line">In Line</option>
                            <option value="Aging">Aging</option>
                            <option value="OQC">OQC</option>
                        </select>
                        <span class="error">Please select Fault Type!</span>
                    </div>
                    <div style="" class="col-md-2 col-sm-2  form-group has-feedback">
                        <label style="">Reason</label>
                        <textarea style="height: 38px;" class="form-control" id="txtReason" placeholder="Enter Qty."></textarea>
                        <span class="error">Enter valid quantity!</span>
                    </div>
                    <div style="text-align: center;" class="col-md-1 col-sm-1  form-group has-feedback">
                        <label style=" text-align: center; font-weight: 900; color: #0c8120;">Sample</label>
                        <input style="" onclick="selectAllText(this.id)" type="number" class="form-control" id="txtSample" placeholder="Enter Sample Qty.">
                        <span class="error">Enter valid quantity!</span>
                    </div>
                    <div style="" class="col-md-3 col-sm-3  form-group has-feedback">
                        <label style="">Remarks</label>
                        <textarea style="height: 38px;" class="form-control" id="txtRemarks" placeholder="Enter Remarks."></textarea>
                        <span class="error">Enter valid quantity!</span>
                    </div>
                    <div style="" class="col-md-3 col-sm-3  form-group has-feedback">
                        <label style="">
                            Probable Solution And Recommendation
                        </label>
                        <textarea style="height: 38px;" class="form-control" id="txtQTY" placeholder="Enter Probable Solution And Recommendation"></textarea>
                        <span class="error">Enter valid quantity!</span>
                    </div>
                    <div class="col-md-1" style="text-align: center; margin-top: 15px;">
                        <input type="button" class="addbutton box-shadow" id="add" value="Add" />
                    </div>
                </div>
            </div>
            <div  id="faultsItem">

            </div>
        </form>
    </div>
</div>
<div style="margin-top:10px">
    <div class="row">
        <div style="text-align:center" class="col-md-12">
            <button onclick="RedirectToPage()" class="btn btn-dark">Back To List</button>
            <button type="button" id="submit" class="btn btn-success">Submit</button>
        </div>
    </div>
</div>
<br />
<div style="height:200px">

</div>
<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
      rel="Stylesheet" type="text/css" />

@section scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            /*alert("");*/
            const today = (function () {
                const now = new Date();
                const month = (now.getMonth() + 1).toString().padStart(2, '0');
                const day = now.getDate().toString().padStart(2, '0');
                return `${month}-${day}-${now.getFullYear()}`;
            })();

            //$("#ddlPartsModel").change(function () {
            //    alert($("#ddlPartsModel").val());
            //});

            $('#ddlModel, #ddlCategory, #ddlSubCategory').select2({});

            $('.numberFunctional').keyup(function () {
                //alert("0")
                var val1 = $("#txtMaterialFaultFun").val(),
                    val2 = $("#txtProductionFaultFun").val(), val3 = $("#txtSoftwareFaultFun").val();
                $("#txtTotalFunctional").text(Number(val1) + Number(val2) + Number(val3));
            });
            $('.numberAesthetic').keyup(function () {
                //alert("0")
                var val1 = $("#txtMaterialFaultAes").val(),
                    val2 = $("#txtProductionFaultAes").val();
                $("#textTotalAesthetic").text(Number(val1) + Number(val2));
            });

            $('#ddlCategory').on("change", function () {
                $('#ddlFaultType').val("");
                $('#ddlSubCategory').html('');
                var options = '';
                options += '<option value="">--Select Sub Category--</option>';
                $('#ddlSubCategory').append(options);
            });

            $('#ddlFaultType').on("change", function () {
                var category = $('#ddlCategory').val();
                var faultType = $('#ddlFaultType').val();
                if (category != "") {
                    var obj = { "CategoryID": category, "FaultType": faultType};
                    AjaxCall('@Url.Action("GetSubCategoryByCategoryID", "SubCategory")', obj, 'POST').done(function (response) {
                        if (response.length > 0) {
                            console.log(response);

                            $('#ddlSubCategory').html('');
                            var options = '';
                            options += '<option value="">--Select Sub Category--</option>';
                            for (var i = 0; i < response.length; i++) {
                                options += '<option value="' + response[i].id + '">' + response[i].subCategoryName + '</option>';
                            }
                            $('#ddlSubCategory').append(options);

                        }
                        else {
                            $('#ddlSubCategory').html('');
                            var options = '';
                            options += '<option value="">--Select Sub Category--</option>';
                            $('#ddlSubCategory').append(options);
                        }
                    }).fail(function (error) {
                        alert(error.StatusText);
                    });
                }
                else {
                    alert("Select Category First");
                    $('#ddlFaultType').val("");
                }

            });
        });
        function selectAllText(senderId) {
            document.getElementById(senderId).focus();
            document.getElementById(senderId).select();
        }
        function AjaxCall(url, data, type) {
            return $.ajax({
                url: url,
                type: type,
                data: data,
                //contentType: 'application/json'
            });
        }
    </script>

    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script type="text/javascript">
        $(function () {
            $("#txtFaultType").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("FaultsTypeAutoComplete", "AddFaultsInfo")',
                        data: { "prefix": request.term, "type": "FT"},
                        type: "POST",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        //error: function (response) {
                        //    alert(response.responseText);
                        //},
                        //failure: function (response) {
                        //    alert(response.responseText);
                        //}
                    });
                },
                //select: function (e, i) {
                //    $("#hfFaultsType").val(i.item.val);
                //},
                minLength: 1
            });
            $("#txtRootCause").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("FaultsTypeAutoComplete", "AddFaultsInfo")',
                        data: { "prefix": request.term, "type": "RC" },
                        type: "POST",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        }
                    });
                },
                minLength: 1
            });
            $("#txtSolution").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("FaultsTypeAutoComplete", "AddFaultsInfo")',
                        data: { "prefix": request.term, "type": "SO" },
                        type: "POST",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        }
                    });
                },
                minLength: 1
            });
            $("#txtRemarks").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("FaultsTypeAutoComplete", "AddFaultsInfo")',
                        data: { "prefix": request.term, "type": "RE" },
                        type: "POST",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        }
                    });
                },
                minLength: 1
            });
        });
    </script>
    <script>
        //Date Picker
        $(function () {
            $('#orderDate').datepicker({
                dateFormat: 'mm-dd-yy'
            });
        });
        $(document).ready(function () {
            $('#LoadedSortData').html('Select filter dropdown to preview...');
            var faultsItem = [];
            var LoadedSortData = [];
            var LoadDataForEidit = @Json.Serialize(Model.MobileRNDFaultDetailsViewModel);
            if (LoadDataForEidit != null) {
                if (LoadDataForEidit.length != 0) {
                    for (var h = 0; h < LoadDataForEidit.length; h++) {
                        faultsItem.push({
                            CategoryID: LoadDataForEidit[h].categoryID,
                            CategoryName: LoadDataForEidit[h].categoryName,
                            SubCategoryID: LoadDataForEidit[h].subCategoryID,
                            SubCategoryName: LoadDataForEidit[h].subCategoryName,
                            FaultType: LoadDataForEidit[h].faultType,
                            FaultTypeName: LoadDataForEidit[h].faultType,
                            FaultQty: LoadDataForEidit[h].faultQty,
                        });
                    }
                    GeneratedItemsTable();
                }
            }

            //Add button click function
            $('#add').click(function () {
                var isValidItem = true;
                if ($('#ddlCategory').val().trim() == '') {
                    isValidItem = false;
                    $('#ddlCategory').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    var CategoryID = $('#ddlCategory').val().trim();
                    var CategoryText = $("#ddlCategory option:selected").text();
                    $('#ddlCategory').siblings('span.error').css('visibility', 'hidden');
                }
                if ($('#ddlFaultType').val().trim() == '') {
                    isValidItem = false;
                    $('#ddlFaultType').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    var FaultType = $('#ddlFaultType').val().trim();
                    var FaulttypeName = $("#ddlFaultType option:selected").text();
                    $('#ddlFaultType').siblings('span.error').css('visibility', 'hidden');
                }
                if ($('#ddlSubCategory').val().trim() == '') {
                    isValidItem = false;
                    $('#ddlSubCategory').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    var SubCategoryID = $('#ddlSubCategory').val().trim();
                    var SubCategoryText = $("#ddlSubCategory option:selected").text();
                    $('#ddlSubCategory').siblings('span.error').css('visibility', 'hidden');
                }

                if (!($('#txtQTY').val().trim() != '' && !isNaN($('#txtQTY').val().trim()))) {
                    isValidItem = false;
                    $('#txtQTY').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#txtQTY').siblings('span.error').css('visibility', 'hidden');
                }
                if (isValidItem) {
                    var isExixtsSubCategory = checkIfObjectExist(faultsItem, SubCategoryText, SubCategoryID)
                    if (isExixtsSubCategory) {
                        alert("You already Enter this ( " + SubCategoryText +" ) sub category, Please Remove to update!");
                    }
                    else {
                        faultsItem.push({
                            CategoryID: CategoryID,
                            CategoryName: CategoryText,
                            SubCategoryID: SubCategoryID,
                            SubCategoryName: SubCategoryText,
                            FaultType: FaultType,
                            FaultTypeName: FaulttypeName,
                            FaultQty: parseInt($('#txtQTY').val().trim()),
                        });
                    }
                    $('#ddlSubCategory').val("").change().focus();
                    $('#txtQTY').val("");
                }
                GeneratedItemsTable();
            });
            //Save button click function
            $('#submit').click(function () {
                //validation of order
                var isAllValid = true;
                if (faultsItem.length == 0) {
                    $('#faultsItem').html('<span style="color:red;">Please add faults details!</span>');
                    isAllValid = false;
                }

                if ($('#txtDate').val().trim() == '') {
                    $('#txtDate').siblings('span.error').css('visibility', 'visible');
                    isAllValid = false;
                }
                else {
                    $('#txtDate').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#ddlModel').val().trim() == "00000000-0000-0000-0000-000000000000") {
                    $('#ddlmodelError').css('visibility', 'visible');
                    isAllValid = false;
                }
                else {
                    $('#ddlmodelError').css('visibility', 'hidden');
                }

                if ($('#ddlCategory').val().trim() == '') {
                    isValidItem = false;
                    $('#ddlCategory').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    var CategoryID = $('#ddlCategory').val().trim();
                    var CategoryText = $("#ddlCategory option:selected").text();
                    $('#ddlCategory').siblings('span.error').css('visibility', 'hidden');
                }
                if ($('#ddlFaultType').val().trim() == '') {
                    isValidItem = false;
                    $('#ddlFaultType').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    var FaultType = $('#ddlFaultType').val().trim();
                    var FaulttypeName = $("#ddlFaultType option:selected").text();
                    $('#ddlFaultType').siblings('span.error').css('visibility', 'hidden');
                }
                if ($('#ddlSubCategory').val().trim() == '') {
                    isValidItem = false;
                    $('#ddlSubCategory').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    var SubCategoryID = $('#ddlSubCategory').val().trim();
                    var SubCategoryText = $("#ddlSubCategory option:selected").text();
                    $('#ddlSubCategory').siblings('span.error').css('visibility', 'hidden');
                }
                //Save if valid
                if (isAllValid) {
                    var data = {
                        Date: $('#txtDate').val().trim(),
                        LineNo: $('#ddlLine').val().trim(),
                        PartsModelID: $('#ddlModel').val().trim(),
                        LotNo: $('#ddlLot').val().trim(),
                        Shipment: $('#ddShipment').val().trim(),
                        Shift: $('#ddShift').val().trim(),
                        TotalCheckedQty: Number($('#txtTotalCheckQty').val().trim()),
                        TypeOfProduction: $('#ddTypeOfProduction').val().trim(),
                        QCPass: Number($('#txtQCPass').val().trim()),
                        MobileRNDFaultDetailsViewModel: faultsItem
                    }
                    console.log(data);

                    $(this).val('Please wait...');

                    $.ajax({
                        url: '@Url.Action("FaultsDetailsAdd", "AddFaultsInfo")',
                        type: "POST",
                        data: JSON.stringify(data),
                        dataType: "JSON",
                        contentType: "application/json",
                        success: function (d) {
                            alert('Successfully done.');
                            window.location.href = '@Url.Action("Index", "AddFaultsInfo")';
                        },
                        error: function () {
                            alert('Error. Please try again.');
                        }
                    });
                }
            });

            $('#txtDate, #ddlModel, #ddlCategory, #ddlFaultType, #ddlSubCategory').on('change', function () {
                DropDownChangeData();
            });
            
            function DropDownChangeData() {
                var date = null;
                var ModelID = null;
                var categoryID = null;
                var faulttype = null;
                var SubCategoryID = null;

                if ($('#txtDate').val().trim() != "") {
                    date = $('#txtDate').val().trim();
                }
                if ($('#ddlModel').val().trim() != "") {
                    ModelID = $('#ddlModel').val().trim();
                }
                if ($('#ddlCategory').val().trim() != "") {
                    categoryID = $('#ddlCategory').val().trim();
                }
                if ($('#ddlFaultType').val().trim() != "") {
                    faulttype = $('#ddlFaultType').val().trim();
                }
                if ($('#ddlSubCategory').val().trim() != "") {
                    SubCategoryID = $('#ddlSubCategory').val().trim();
                }
                var data = {
                    Date: date,
                    ModelID: ModelID,
                    CategoryID: categoryID,
                    FaultType: faulttype,
                    SubCategoryID: SubCategoryID,
                }
                console.log(data);
                    $.ajax({
                        data: data,
                        url: '@Url.Action("LoadFaultsData", "DailyMaxFaultAnalysis")',
                        type: 'GET',
                        dataType: "JSON",
                        contentType: "application/json",
                        success: function (result) {
                            if (result != null) {
                                LoadedSortData = [];
                                console.log(result);

                                for (var h = 0; h < result.length; h++) {
                                    LoadedSortData.push({
                                        Model: result[h].model,
                                        Category: result[h].categoryName,
                                        FaultType: result[h].faultType,
                                        SubCategory: result[h].subCategoryName,
                                        Quantity: result[h].faultQty,
                                    });
                                }
                                if (result.length != 0) {
                                    GeneratedItemsTable1();
                                    //$('#submit').text('Update');
                                }
                                else {
                                    GeneratedItemsTable1();
                                }
                                console.log(faultsItem);
                            }
                            else {
                                
                            }

                        }
                    });
            }
            //function for show added items in table
            function GeneratedItemsTable1() {
                if (LoadedSortData.length > 0) {
                    var $table = $('<table id="header-fixed" border="0" cellpadding="0" cellspacing="0" class="scroll" style="width: 100%;"/>');
                    $table.append('<thead style = "background-color: #73879c; color: white;"><tr><th>Model</th><th>Category</th><th>Fault Type</th><th>Sub Category</th><th>Quantity</th></tr></thead>');
                    var $tbody = $('<tbody/>');
                    $.each(LoadedSortData, function (i, val) {
                        var $row = $('<tr/>');
                        $row.append($('<td/>').html(val.Model));
                        $row.append($('<td/>').html(val.Category));
                        $row.append($('<td/>').html(val.FaultType));
                        $row.append($('<td/>').html(val.SubCategory));
                        $row.append($('<td/>').html(val.Quantity));
                        $tbody.append($row);
                    });
                    console.log("current", LoadedSortData);
                    $table.append($tbody);
                    $('#LoadedSortData').html($table);
                }
                else {
                    $('#LoadedSortData').html('There is no data to preview...');
                }
            }

            function checkIfObjectExist(faultsItem, text, id) {
                console.log(faultsItem);
                if (faultsItem.length > 0) {
                    for (var i = 0; i < faultsItem.length; i++) {
                        if (faultsItem[i].SubCategoryName === text && faultsItem[i].SubCategoryID === id) {
                            return true;
                        }
                    }
                }
                else {
                    return false;
                }
            }
            function ConfirmDialog(message) {
                $('<div></div>').appendTo('body')
                    .html('<div><h6>' + message + '?</h6></div>')
                    .dialog({
                        modal: true,
                        title: 'Delete message',
                        zIndex: 10000,
                        autoOpen: true,
                        width: 'auto',
                        resizable: false,
                        buttons: {
                            Yes: function () {
                                // $(obj).removeAttr('onclick');
                                // $(obj).parents('.Parent').remove();

                                $('body').append('<h1>Confirm Dialog Result: <i>Yes</i></h1>');

                                $(this).dialog("close");
                            },
                            No: function () {
                                $('body').append('<h1>Confirm Dialog Result: <i>No</i></h1>');

                                $(this).dialog("close");
                            }
                        },
                        close: function (event, ui) {
                            $(this).remove();
                        }
                    });
            };
        });

        function RedirectToPage() {
            window.location.href = '@Url.Action("Index", "AddFaultsInfo")';
        }
    </script>
}

<style>
    /*Adding some css for looks good*/
    span.error {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }

    .addbutton {
        display: inline-block;
        padding: 0px 16px;
        font-size: 19px;
        cursor: pointer;
        text-align: center;
        text-decoration: none;
        outline: none;
        color: #fff;
        background-color: #4CAF50;
        border: none;
        border-radius: 15px;
        margin-top: 15px;
    }

        .addbutton:hover {
            background-color: #3e8e41
        }

        .addbutton:active {
            background-color: #3e8e41;
            box-shadow: 0 5px #666;
            transform: translateY(4px);
        }
    /*css for table*/
    /*.container td {
        vertical-align: top;
    }

    .tablecontainer table {
        width: 100%;
        border-collapse: collapse;
        border-top: 1px solid #BFAEAE;
        border-right: 1px solid #BFAEAE;
    }

    .tablecontainer th {
        border-bottom: 2px solid #BFAEAE !important;
    }*/

    .tablecontainer th, .tablecontainer td {
        text-align: center;
    }

    /*.ui-widget {
        font-size: 12px !important;
    }*/
    .ui-autocomplete {
        max-height: 200px;
        max-width: 700px;
        overflow-y: auto;
        overflow-x: auto;
    }

    .ui-autocomplete {
        position: absolute;
        top: 100%;
        left: 0;
        z-index: 1000;
        float: left;
        display: none;
        min-width: 160px;
        padding: 4px 0;
        margin: 0 0 10px 25px;
        list-style: none;
        background-color: #ffffff;
        border-color: #ccc;
        border-color: rgba(0, 0, 0, 0.2);
        border-style: solid;
        border-width: 1px;
        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        border-radius: 5px;
        -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        -moz-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        -webkit-background-clip: padding-box;
        -moz-background-clip: padding;
        background-clip: padding-box;
        *border-right-width: 2px;
        *border-bottom-width: 2px;
    }

    .ui-menu-item > a.ui-corner-all {
        display: block;
        padding: 3px 15px;
        clear: both;
        font-weight: normal;
        line-height: 18px;
        color: #555555;
        white-space: nowrap;
        text-decoration: none;
    }

    .ui-state-hover, .ui-state-active {
        color: #ffffff;
        text-decoration: none;
        background-color: #0088cc;
        border-radius: 0px;
        -webkit-border-radius: 0px;
        -moz-border-radius: 0px;
        background-image: none;
    }

    .bg-white {
        background: #fff !important;
        border: 1px solid #fff !important;
        color: #19416c;
    }

    .select2-container--default .select2-search--dropdown .select2-search__field {
        border: 1px solid #32a73e;
        border-radius: 6px;
    }

    /*Scroll Css*/

    div.wrapper {
        padding: 20px;
    }
    table.scroll thead tr:after {
        content: '';
        overflow-y: scroll;
        visibility: hidden;
    }
    table.scroll thead th {
        flex: 1 auto;
        display: block;
        color: #fff;
    }
    table.scroll tbody {
        display: block;
        width: 100%;
        overflow-y: auto;
        height: auto;
        max-height: 200px;
    }
        table.scroll thead tr,
        table.scroll tbody tr {
            display: flex;
        }

            table.scroll tbody tr td {
                flex: 1 auto;
            }

            table.scroll thead tr th,
            table.scroll tbody tr td {
                width: 25%;
                padding: 5px;
                border-top: 1px solid rgba(0,0,0,0.3);
                text-align: center;
            }
</style>